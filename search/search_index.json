{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Mailscript documentation Mailscript brings the best features of bots and smart contracts for email. Use our free API and CLI, in any language. No complicated setups. Example use cases Setup and route your companies email addresses based on a yaml file. See mailscript sync:export --path my-email-infra.yml for how to setup email infrastructure as code . Redirect engineering emails based on a schedule over the holidays. Mailscript workflows allow your team to edit the flow of emails in your company in one place. Integrate that weekly csv reporting email - you know the one, it comes in every week on an email as an attached csv file - it needs to be downloaded, parsed through a cleanup script and uploaded in the company reporting database. Use mailscript daemon to automate the task away. Auto-provision a new employees email address based off the Github event \u201cAdded to Team\u201d, take a look at our Github actions integration. Setup the \u201cNew Features\u201d weekly email for your app. Sync the app's user list to a Mailscript mailing list with our api , then setup a workflow for the sales team to push the latest features out to the list. Technologies Learn about the different technologies that make-up Mailscript: CLI API SDK Clients Templates Community CLI Getting started is as easy as yarn add global mailscript API It is possible to integrate Mailscript's services directly into your own projects. To do so you can interact with the API directly. The API was built using the OpenAPI Specification which allows developers to interact with the underlying abstractions directly. You can use the following API definitions file: http://api.mailscript.com/swagger and we also offer a playground to try the API here: http://api.mailscript.com/docs/v1/ . Take into consideration that these two endpoints work with production code, so any updates you submit will update your account's configuration. SDK Clients Coming soon. We will be offering sdk clients that implement object wrappers on top of the API. Developers will be able to import/require these libraries directly into their codebases to start using Mailscript. Templates Read our templates on setting up your infrastructure and automations with Mailscript in GitHub. Pipe email attachments to an endpoint Setup the first step of a pipeline with data from email attachments: attachments to webhook . Manage your email infrastructure Version control your email infrastructure and setup a continuous integration process whenever you submit changes: email infrastructure management . Auto-reply to first time senders Let first time senders know you'll get back to them: auto-reply to first time senders . Escalate notifications Send an sms text message when the important messages arrive: two alert messages in a minute to send sms . Send messages to your team channels Notify your discord/slack channels when something needs their attention: run failed to discord #channel . Setup shared addresses for your team Setup a group of employees to receive messages directed to an address and have them all be able to reply from such address: shared address for teams . Community Join our public Discord , visit our GitHub , follow us on Twitter , and check out the Blog !","title":"Home"},{"location":"#welcome-to-the-mailscript-documentation","text":"Mailscript brings the best features of bots and smart contracts for email. Use our free API and CLI, in any language. No complicated setups.","title":"Welcome to the Mailscript documentation"},{"location":"#example-use-cases","text":"Setup and route your companies email addresses based on a yaml file. See mailscript sync:export --path my-email-infra.yml for how to setup email infrastructure as code . Redirect engineering emails based on a schedule over the holidays. Mailscript workflows allow your team to edit the flow of emails in your company in one place. Integrate that weekly csv reporting email - you know the one, it comes in every week on an email as an attached csv file - it needs to be downloaded, parsed through a cleanup script and uploaded in the company reporting database. Use mailscript daemon to automate the task away. Auto-provision a new employees email address based off the Github event \u201cAdded to Team\u201d, take a look at our Github actions integration. Setup the \u201cNew Features\u201d weekly email for your app. Sync the app's user list to a Mailscript mailing list with our api , then setup a workflow for the sales team to push the latest features out to the list.","title":"Example use cases"},{"location":"#technologies","text":"Learn about the different technologies that make-up Mailscript: CLI API SDK Clients Templates Community","title":"Technologies"},{"location":"#cli","text":"Getting started is as easy as yarn add global mailscript","title":"CLI"},{"location":"#api","text":"It is possible to integrate Mailscript's services directly into your own projects. To do so you can interact with the API directly. The API was built using the OpenAPI Specification which allows developers to interact with the underlying abstractions directly. You can use the following API definitions file: http://api.mailscript.com/swagger and we also offer a playground to try the API here: http://api.mailscript.com/docs/v1/ . Take into consideration that these two endpoints work with production code, so any updates you submit will update your account's configuration.","title":"API"},{"location":"#sdk-clients","text":"Coming soon. We will be offering sdk clients that implement object wrappers on top of the API. Developers will be able to import/require these libraries directly into their codebases to start using Mailscript.","title":"SDK Clients"},{"location":"#templates","text":"Read our templates on setting up your infrastructure and automations with Mailscript in GitHub.","title":"Templates"},{"location":"#pipe-email-attachments-to-an-endpoint","text":"Setup the first step of a pipeline with data from email attachments: attachments to webhook .","title":"Pipe email attachments to an endpoint"},{"location":"#manage-your-email-infrastructure","text":"Version control your email infrastructure and setup a continuous integration process whenever you submit changes: email infrastructure management .","title":"Manage your email infrastructure"},{"location":"#auto-reply-to-first-time-senders","text":"Let first time senders know you'll get back to them: auto-reply to first time senders .","title":"Auto-reply to first time senders"},{"location":"#escalate-notifications","text":"Send an sms text message when the important messages arrive: two alert messages in a minute to send sms .","title":"Escalate notifications"},{"location":"#send-messages-to-your-team-channels","text":"Notify your discord/slack channels when something needs their attention: run failed to discord #channel .","title":"Send messages to your team channels"},{"location":"#setup-shared-addresses-for-your-team","text":"Setup a group of employees to receive messages directed to an address and have them all be able to reply from such address: shared address for teams .","title":"Setup shared addresses for your team"},{"location":"#community","text":"Join our public Discord , visit our GitHub , follow us on Twitter , and check out the Blog !","title":"Community"},{"location":"api/","text":"","title":"Api"},{"location":"sdk-clients/","text":"","title":"Sdk clients"},{"location":"cli/accessories/","text":"accessories Configure your accessories mailscript accessories:add add an accessory USAGE $ mailscript accessories:add OPTIONS -h, --help show CLI help -n, --name=name (required) the name of the accessory --sms=sms (required) the telephone number to send the sms too mailscript accessories:delete delete an accessory USAGE $ mailscript accessories:delete OPTIONS -a, --accessory=accessory (required) id of the accessory to act upon -h, --help show CLI help mailscript accessories:list list the accessories USAGE $ mailscript accessories:list OPTIONS -h, --help show CLI help","title":"Accessories"},{"location":"cli/accessories/#accessories","text":"Configure your accessories","title":"accessories"},{"location":"cli/accessories/#mailscript-accessoriesadd","text":"add an accessory USAGE $ mailscript accessories:add OPTIONS -h, --help show CLI help -n, --name=name (required) the name of the accessory --sms=sms (required) the telephone number to send the sms too","title":"mailscript accessories:add"},{"location":"cli/accessories/#mailscript-accessoriesdelete","text":"delete an accessory USAGE $ mailscript accessories:delete OPTIONS -a, --accessory=accessory (required) id of the accessory to act upon -h, --help show CLI help","title":"mailscript accessories:delete"},{"location":"cli/accessories/#mailscript-accessorieslist","text":"list the accessories USAGE $ mailscript accessories:list OPTIONS -h, --help show CLI help","title":"mailscript accessories:list"},{"location":"cli/addresses/","text":"addresses Configure your email addresses mailscript addresses:add add an email address USAGE $ mailscript addresses:add OPTIONS -a, --address=address (required) the address -h, --help show CLI help mailscript addresses:delete delete an email address USAGE $ mailscript addresses:delete OPTIONS -a, --address=address (required) the address -h, --help show CLI help mailscript addresses:list list your email addresses USAGE $ mailscript addresses:list OPTIONS -h, --help show CLI help","title":"Addresses"},{"location":"cli/addresses/#addresses","text":"Configure your email addresses","title":"addresses"},{"location":"cli/addresses/#mailscript-addressesadd","text":"add an email address USAGE $ mailscript addresses:add OPTIONS -a, --address=address (required) the address -h, --help show CLI help","title":"mailscript addresses:add"},{"location":"cli/addresses/#mailscript-addressesdelete","text":"delete an email address USAGE $ mailscript addresses:delete OPTIONS -a, --address=address (required) the address -h, --help show CLI help","title":"mailscript addresses:delete"},{"location":"cli/addresses/#mailscript-addresseslist","text":"list your email addresses USAGE $ mailscript addresses:list OPTIONS -h, --help show CLI help","title":"mailscript addresses:list"},{"location":"cli/commands/","text":"mailscript Configure and manipulate email pipeline in Mailscript from the cli VERSION mailscript/0.3.18 darwin-x64 node-v15.3.0 USAGE $ mailscript [COMMAND] TOPICS accessories configure your accessories addresses configure your email addresses keys configure keys for your email addresses sync import/export configuration between files and Mailscript workflows configure your workflows COMMANDS help display help for mailscript login sign up or login to your account send send an email from one of your addresses usernames manipulate usernames Help mailscript help [command] - Display help for mailscript commands Version mailscript --version - Display information on the cli version currently installed See also accessories - Manipulates accessories addresses - Manipulates addresses keys - Manipulates address keys sync - Manipulates usernames workflows - Manipulates automations login - Sign up or login to your account send - Send an email from one of your addresses usernames - Manipulates usernames","title":"Overview"},{"location":"cli/commands/#mailscript","text":"Configure and manipulate email pipeline in Mailscript from the cli VERSION mailscript/0.3.18 darwin-x64 node-v15.3.0 USAGE $ mailscript [COMMAND] TOPICS accessories configure your accessories addresses configure your email addresses keys configure keys for your email addresses sync import/export configuration between files and Mailscript workflows configure your workflows COMMANDS help display help for mailscript login sign up or login to your account send send an email from one of your addresses usernames manipulate usernames","title":"mailscript"},{"location":"cli/commands/#help","text":"mailscript help [command] - Display help for mailscript commands","title":"Help"},{"location":"cli/commands/#version","text":"mailscript --version - Display information on the cli version currently installed","title":"Version"},{"location":"cli/commands/#see-also","text":"accessories - Manipulates accessories addresses - Manipulates addresses keys - Manipulates address keys sync - Manipulates usernames workflows - Manipulates automations login - Sign up or login to your account send - Send an email from one of your addresses usernames - Manipulates usernames","title":"See also"},{"location":"cli/daemon/","text":"daemon Run scripts within a local daemon in response to emails recieved in Mailscript. mailscript daemon Run a daemon to execute scripts on email arrival USAGE $ mailscript daemon OPTIONS -h, --help show CLI help --accessory=accessory (required) the accessory to listen in on --command=command (required) The shell command to run on message received","title":"Daemon"},{"location":"cli/daemon/#daemon","text":"Run scripts within a local daemon in response to emails recieved in Mailscript.","title":"daemon"},{"location":"cli/daemon/#mailscript-daemon","text":"Run a daemon to execute scripts on email arrival USAGE $ mailscript daemon OPTIONS -h, --help show CLI help --accessory=accessory (required) the accessory to listen in on --command=command (required) The shell command to run on message received","title":"mailscript daemon"},{"location":"cli/get-started/","text":"Installation and Account Setup To create an account, you first need to install the Mailscript CLI. The CLI is where you: Manage accounts. Claim addresses. Create keys for your addresses. Create workflows for your automations. And more. The first step is to download and install the executable. Install the CLI executable Install the CLI executable from the npm registry: mailscript with yarn global add mailscript or npm install global mailscript Account setup The next step is to initialize an account. The CLI uses a variety of identity providers, so choose the one you prefer. mailscript login Offline support The CLI offers a secondary login flow for setups without access to a browser instance (eg. a docker container). It will have ask you to go over a login flow elsewhere and return a code to resume the sign-in process within the CLI context. mailscript login --offline Initialize If this is the first time you are signing in you'll be prompted to pick a username. Once the you've has selected a username your account setup will be complete. Addresses Addresses allow you to send and receive email messages. You receive a top level domain address corresponding to your selected username (eg. username@mailscript.com ) and you can create addresses using your username as a first level subdomain (eg. team@username.mailscript.com ) You can create an address easily: mailscript addresses:add --address address@username.mailscript.com Keys Keys allow you to share scoped access ( write and/or read ) to addresses you control with other people. Whenever you add an address a key is generated with full access for you. You can list the keys for any address you control with the following command: mailscript keys:list --address [your email address] SMTP gateway Keys with the write access can be used to setup smtp access to allow email clients to send messages from any mailscript address. To do so use the following configuration: host: smtp.mailscript.com port: 465 user: full address (eg. username@mailscript.com) pass: a key corresponding to the address with write access Next, you can start setting up workflows whenever your addresses receive an email message. Workflows Workflows allow you to setup automations when a message arrives at any of the addresses you control. A workflow consists of a trigger and an action. Whenever a trigger is met the corresponding actions will beexecuted. Triggers Currently mailscript allows you to set up triggers based on incoming messages to addresses you control. You can set criteria to filter specific messages to rigger actions (eg. messages sent from a specific address, messages that include attachments, that contain specific words in the subject or body, messages that contain attachments, mailscript even allows you to set up filters matching specific headers in your email message!) Actions Mailscript offers outputs based on three different kinds of actions that can happen when a trigger is met: Email actions: send a new email message, forward the received email message, redirect the message to another address and reply to the sender or all participants in the received message. SMS action: send an sms text to a specified number. Webhook action: send a request to an endpoint. The request can be customized to suit your needs (eg. customize verbs, headers and payload; you can even use data from the received message into the delivered payload). Daemon The Mailscript cli allows you to use your local machine, or a server, as an accessory in a workflow. Using the mailscript daemon command you can run a local daemon that will execute a script you specify as part of a workflow and in response to an email. Setting up a daemon First register a new daemon action: mailscript actions:add --name \"action name\" --daemon \"daemon name\" We can now include the accessory in a workflow (use one of your own mailscript email addresses in the trigger): mailscript workflows:add \\ --name \"workflow name\" \\ --trigger \"trigger name\" \\ --action \"daemon name\" Any email sent to the input and that matches the trigger, will be forwarded to the daemon listening on the daemon name action. To setup such a daemon run: mailscript daemon \\ --daemon \"daemon name\" --command \"cowsay \\$subject\" The command parameter specifies the shell script to run when the workflow sends an email to the daemon accessory, in this case the cowsay utility. The contents of the email are made available through the $subject and $text environment variables. The command will be executed each time on each received email.","title":"Get started"},{"location":"cli/get-started/#installation-and-account-setup","text":"To create an account, you first need to install the Mailscript CLI. The CLI is where you: Manage accounts. Claim addresses. Create keys for your addresses. Create workflows for your automations. And more. The first step is to download and install the executable.","title":"Installation and Account Setup"},{"location":"cli/get-started/#install-the-cli-executable","text":"Install the CLI executable from the npm registry: mailscript with yarn global add mailscript or npm install global mailscript","title":"Install the CLI executable"},{"location":"cli/get-started/#account-setup","text":"The next step is to initialize an account. The CLI uses a variety of identity providers, so choose the one you prefer. mailscript login","title":"Account setup"},{"location":"cli/get-started/#offline-support","text":"The CLI offers a secondary login flow for setups without access to a browser instance (eg. a docker container). It will have ask you to go over a login flow elsewhere and return a code to resume the sign-in process within the CLI context. mailscript login --offline","title":"Offline support"},{"location":"cli/get-started/#initialize","text":"If this is the first time you are signing in you'll be prompted to pick a username. Once the you've has selected a username your account setup will be complete.","title":"Initialize"},{"location":"cli/get-started/#addresses","text":"Addresses allow you to send and receive email messages. You receive a top level domain address corresponding to your selected username (eg. username@mailscript.com ) and you can create addresses using your username as a first level subdomain (eg. team@username.mailscript.com ) You can create an address easily: mailscript addresses:add --address address@username.mailscript.com","title":"Addresses"},{"location":"cli/get-started/#keys","text":"Keys allow you to share scoped access ( write and/or read ) to addresses you control with other people. Whenever you add an address a key is generated with full access for you. You can list the keys for any address you control with the following command: mailscript keys:list --address [your email address]","title":"Keys"},{"location":"cli/get-started/#smtp-gateway","text":"Keys with the write access can be used to setup smtp access to allow email clients to send messages from any mailscript address. To do so use the following configuration: host: smtp.mailscript.com port: 465 user: full address (eg. username@mailscript.com) pass: a key corresponding to the address with write access Next, you can start setting up workflows whenever your addresses receive an email message.","title":"SMTP gateway"},{"location":"cli/get-started/#workflows","text":"Workflows allow you to setup automations when a message arrives at any of the addresses you control. A workflow consists of a trigger and an action. Whenever a trigger is met the corresponding actions will beexecuted.","title":"Workflows"},{"location":"cli/get-started/#triggers","text":"Currently mailscript allows you to set up triggers based on incoming messages to addresses you control. You can set criteria to filter specific messages to rigger actions (eg. messages sent from a specific address, messages that include attachments, that contain specific words in the subject or body, messages that contain attachments, mailscript even allows you to set up filters matching specific headers in your email message!)","title":"Triggers"},{"location":"cli/get-started/#actions","text":"Mailscript offers outputs based on three different kinds of actions that can happen when a trigger is met: Email actions: send a new email message, forward the received email message, redirect the message to another address and reply to the sender or all participants in the received message. SMS action: send an sms text to a specified number. Webhook action: send a request to an endpoint. The request can be customized to suit your needs (eg. customize verbs, headers and payload; you can even use data from the received message into the delivered payload).","title":"Actions"},{"location":"cli/get-started/#daemon","text":"The Mailscript cli allows you to use your local machine, or a server, as an accessory in a workflow. Using the mailscript daemon command you can run a local daemon that will execute a script you specify as part of a workflow and in response to an email.","title":"Daemon"},{"location":"cli/get-started/#setting-up-a-daemon","text":"First register a new daemon action: mailscript actions:add --name \"action name\" --daemon \"daemon name\" We can now include the accessory in a workflow (use one of your own mailscript email addresses in the trigger): mailscript workflows:add \\ --name \"workflow name\" \\ --trigger \"trigger name\" \\ --action \"daemon name\" Any email sent to the input and that matches the trigger, will be forwarded to the daemon listening on the daemon name action. To setup such a daemon run: mailscript daemon \\ --daemon \"daemon name\" --command \"cowsay \\$subject\" The command parameter specifies the shell script to run when the workflow sends an email to the daemon accessory, in this case the cowsay utility. The contents of the email are made available through the $subject and $text environment variables. The command will be executed each time on each received email.","title":"Setting up a daemon"},{"location":"cli/keys/","text":"keys Configure keys for your email addresses mailscript keys:add add an address key USAGE $ mailscript keys:add OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help -n, --name=name (required) the name for the key -r, --read set the key with read permissions -w, --write set the key with write permissions mailscript keys:delete delete an address key USAGE $ mailscript keys:delete OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help -k, --key=key (required) the id of the address key mailscript keys:list List the address keys for an address USAGE $ mailscript keys:list OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help mailscript keys:update update an address key USAGE $ mailscript keys:update OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help -k, --key=key (required) the id of the address key -n, --name=name (required) the name for the key -r, --read set the key with read permissions -w, --write set the key with write permissions","title":"Keys"},{"location":"cli/keys/#keys","text":"Configure keys for your email addresses","title":"keys"},{"location":"cli/keys/#mailscript-keysadd","text":"add an address key USAGE $ mailscript keys:add OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help -n, --name=name (required) the name for the key -r, --read set the key with read permissions -w, --write set the key with write permissions","title":"mailscript keys:add"},{"location":"cli/keys/#mailscript-keysdelete","text":"delete an address key USAGE $ mailscript keys:delete OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help -k, --key=key (required) the id of the address key","title":"mailscript keys:delete"},{"location":"cli/keys/#mailscript-keyslist","text":"List the address keys for an address USAGE $ mailscript keys:list OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help","title":"mailscript keys:list"},{"location":"cli/keys/#mailscript-keysupdate","text":"update an address key USAGE $ mailscript keys:update OPTIONS -a, --address=address (required) the email address to look for keys against -h, --help show CLI help -k, --key=key (required) the id of the address key -n, --name=name (required) the name for the key -r, --read set the key with read permissions -w, --write set the key with write permissions","title":"mailscript keys:update"},{"location":"cli/login/","text":"login Sign up or login to your account mailscript login link or create your MailScript account USAGE $ mailscript login OPTIONS -o, --offline DESCRIPTION Link or create your MailScript account","title":"Login"},{"location":"cli/login/#login","text":"Sign up or login to your account","title":"login"},{"location":"cli/login/#mailscript-login","text":"link or create your MailScript account USAGE $ mailscript login OPTIONS -o, --offline DESCRIPTION Link or create your MailScript account","title":"mailscript login"},{"location":"cli/send/","text":"send Send an email from one of your addresses mailscript send [FILE] send an email from a mailscript address USAGE $ mailscript send [FILE] OPTIONS -b, --text=text text of email -h, --help show CLI help -s, --subject=subject (required) subject line of email -t, --from=from (required) email address to use for sending -t, --to=to (required) email address to send to","title":"Send"},{"location":"cli/send/#send","text":"Send an email from one of your addresses","title":"send"},{"location":"cli/send/#mailscript-send-file","text":"send an email from a mailscript address USAGE $ mailscript send [FILE] OPTIONS -b, --text=text text of email -h, --help show CLI help -s, --subject=subject (required) subject line of email -t, --from=from (required) email address to use for sending -t, --to=to (required) email address to send to","title":"mailscript send [FILE]"},{"location":"cli/sync/","text":"sync import/export configuration between files and Mailscript mailscript sync:export export your Mailscript config to file USAGE $ mailscript sync:export OPTIONS -h, --help show CLI help -p, --path=path path to the file to read/write mailscript sync:import import and update config from file into Mailscript USAGE $ mailscript sync:import OPTIONS -d, --delete force delete of entities missing from import file -h, --help show CLI help -p, --path=path (required) path to the file to read/write","title":"Sync"},{"location":"cli/sync/#sync","text":"import/export configuration between files and Mailscript","title":"sync"},{"location":"cli/sync/#mailscript-syncexport","text":"export your Mailscript config to file USAGE $ mailscript sync:export OPTIONS -h, --help show CLI help -p, --path=path path to the file to read/write","title":"mailscript sync:export"},{"location":"cli/sync/#mailscript-syncimport","text":"import and update config from file into Mailscript USAGE $ mailscript sync:import OPTIONS -d, --delete force delete of entities missing from import file -h, --help show CLI help -p, --path=path (required) path to the file to read/write","title":"mailscript sync:import"},{"location":"cli/usernames/","text":"usernames Configure your usernames mailscript usernames SUBCOMMAND manipulate usernames USAGE $ mailscript usernames SUBCOMMAND OPTIONS -h, --help show CLI help -n, --username=username the username to claim","title":"Usernames"},{"location":"cli/usernames/#usernames","text":"Configure your usernames","title":"usernames"},{"location":"cli/usernames/#mailscript-usernames-subcommand","text":"manipulate usernames USAGE $ mailscript usernames SUBCOMMAND OPTIONS -h, --help show CLI help -n, --username=username the username to claim","title":"mailscript usernames SUBCOMMAND"},{"location":"cli/workflows/","text":"workflows Configure your workflows mailscript workflows:add add a workflow USAGE $ mailscript workflows:add OPTIONS -a, --action=action id of the action accessory -f, --forward=forward email address for forward action -h, --help show CLI help -h, --html=html html of the email -r, --reply email address for reply action -s, --subject=subject subject of the email -t, --name=name (required) name of the workflow -t, --text=text text of the email -t, --trigger=trigger (required) id of the trigger accessory -w, --webhook=webhook url of the webhook to call --alias=alias email address for alias action --body=body file to take webhook body from --domain=domain constrain trigger to emails are from an email address with the given domain --from=from constrain trigger to emails from the specified address --hasattachments constrain trigger to emails with attachments --hasthewords=hasthewords constrain trigger to emails that have the words specified --headers=headers file to take webhook headers from --method=(PUT|POST|GET) [default: POST] HTTP method to use in webhook --noninteractive do not ask for user input --replyall email address for reply all action --seconds=seconds period of time to calculate the trigger over --send=send email address for send action --sentto=sentto constrain trigger to emails sent to the specified address --subjectcontains=subjectcontains constrain trigger to emails whose subject contains the specified text --times=times number of emails in a period for trigger to activate --workflow=workflow id of the workflow to be acted on mailscript workflows:delete delete a workflow USAGE $ mailscript workflows:delete OPTIONS -h, --help show CLI help -w, --workflow=workflow (required) id of the workflow to be acted on mailscript workflows:list list the workflows USAGE $ mailscript workflows:list OPTIONS -h, --help show CLI help","title":"Workflows"},{"location":"cli/workflows/#workflows","text":"Configure your workflows","title":"workflows"},{"location":"cli/workflows/#mailscript-workflowsadd","text":"add a workflow USAGE $ mailscript workflows:add OPTIONS -a, --action=action id of the action accessory -f, --forward=forward email address for forward action -h, --help show CLI help -h, --html=html html of the email -r, --reply email address for reply action -s, --subject=subject subject of the email -t, --name=name (required) name of the workflow -t, --text=text text of the email -t, --trigger=trigger (required) id of the trigger accessory -w, --webhook=webhook url of the webhook to call --alias=alias email address for alias action --body=body file to take webhook body from --domain=domain constrain trigger to emails are from an email address with the given domain --from=from constrain trigger to emails from the specified address --hasattachments constrain trigger to emails with attachments --hasthewords=hasthewords constrain trigger to emails that have the words specified --headers=headers file to take webhook headers from --method=(PUT|POST|GET) [default: POST] HTTP method to use in webhook --noninteractive do not ask for user input --replyall email address for reply all action --seconds=seconds period of time to calculate the trigger over --send=send email address for send action --sentto=sentto constrain trigger to emails sent to the specified address --subjectcontains=subjectcontains constrain trigger to emails whose subject contains the specified text --times=times number of emails in a period for trigger to activate --workflow=workflow id of the workflow to be acted on","title":"mailscript workflows:add"},{"location":"cli/workflows/#mailscript-workflowsdelete","text":"delete a workflow USAGE $ mailscript workflows:delete OPTIONS -h, --help show CLI help -w, --workflow=workflow (required) id of the workflow to be acted on","title":"mailscript workflows:delete"},{"location":"cli/workflows/#mailscript-workflowslist","text":"list the workflows USAGE $ mailscript workflows:list OPTIONS -h, --help show CLI help","title":"mailscript workflows:list"}]}